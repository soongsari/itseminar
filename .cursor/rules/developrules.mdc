---
description: 
globs: 
alwaysApply: true
---
# Cursor AI Project Rules for IT Seminar Application

## 💻 Development Environment
- Backend: Spring Boot 3.2.x (Maven)
- JDK: Java 17
- Frontend: Next.js 14.x (App Router) with React 18.x
- Node.js: v18.x LTS
- npm: v9.x
- Database: PostgreSQL 15.x
- ORM: Hibernate 6.x (JPA)
- Authentication: Spring Security + LDAP (현재는 로컬 LDAP, 이후 사내 AD로 확장 예정)
- File Storage: PostgreSQL BLOB column
- 오프라인 사내망에서도 동작 가능해야 함
- 외부 API, 외부 CDN, 외부 파일 스토리지 사용 금지

---

## 📦 Project Structure
/backend # Spring Boot 프로젝트
/frontend # Next.js 프로젝트
/common # 선택적 공통 타입/유틸리티


---

## ⚙️ Common Rules
- 기술 스택과 버전 고정 (Cursor가 변경하지 않도록)
- 모든 외부 종속성은 내부망에서도 설치 가능해야 함
- 인증, 파일 업로드, 데이터 저장 방식 등은 반드시 명시된 형태로만 구성
- 모든 기능은 오프라인 환경에서 정상 동작 가능해야 함

---

## 🔐 Authentication
- Spring Security 기반 로그인
- 초기엔 DB 기반 username/password (BCrypt)
- LDAP (Local) 연동 → 이후 사내 Active Directory로 교체 가능하도록 인터페이스 설계
- 인증 API:
  - POST `/api/auth/login`
  - GET `/api/auth/me`
  - POST `/api/auth/logout`

---

## 👤 Roles
- USER: 세미나 조회, 신청 가능
- ADMIN: 세미나 등록, 수정, 삭제, 신청자 확인 가능
- 권한 구조는 `ROLE_USER`, `ROLE_ADMIN` 형식

---

## 📚 Features

### 사용자 기능 (USER)
- 로그인
- 세미나 목록 조회
- 세미나 상세 조회
- 세미나 신청
- 신청 내역 조회
- 신청 취소 (세미나 시작 24시간 전까지만 가능)

### 관리자 기능 (ADMIN)
- 세미나 등록 (첨부파일 포함)
- 세미나 수정 / 삭제
- 세미나별 신청자 목록 조회
- 신청자 명단 Excel 다운로드 (옵션 기능)

### 시스템 자동 기능
- 세미나는 시작 시간이 지나면 자동으로 마감 처리됨 (`is_closed = true`)
- 마감된 세미나는 신청 불가
- 신청 마감 여부는 백엔드에서 판단하며, 프론트에도 반영

---

## 📎 File Upload
- 세미나 등록 시 파일 업로드 가능
- 업로드 파일은 PostgreSQL의 BLOB 컬럼에 저장
- 파일 메타정보는 별도 테이블에 저장
- 다중 파일 업로드 구조 지원
- 파일 다운로드 API 제공

---

## 📂 ERD

### User
| Field         | Type        |
|---------------|-------------|
| id            | UUID (PK)   |
| username      | String      |
| password      | String (BCrypt) |
| full_name     | String      |
| email         | String      |
| department    | String      |
| role          | Enum(ADMIN/USER) |
| created_at    | Timestamp   |

---

### Seminar
| Field         | Type        |
|---------------|-------------|
| id            | UUID (PK)   |
| title         | String      |
| description   | Text        |
| date          | Timestamp   |
| location      | String      |
| is_closed     | Boolean     |
| created_by    | UUID (FK to User) |
| created_at    | Timestamp   |

---

### SeminarApplication
| Field         | Type        |
|---------------|-------------|
| id            | UUID (PK)   |
| user_id       | UUID (FK)   |
| seminar_id    | UUID (FK)   |
| applied_at    | Timestamp   |

---

### FileAttachment
| Field         | Type        |
|---------------|-------------|
| id            | UUID (PK)   |
| seminar_id    | UUID (FK)   |
| file_name     | String      |
| file_data     | BLOB        |
| uploaded_at   | Timestamp   |

---

## 🌐 API Specification

### Auth
- `POST /api/auth/login` – 로그인
- `GET /api/auth/me` – 로그인한 사용자 정보
- `POST /api/auth/logout` – 로그아웃

### Users
- `GET /api/users/me` – 내 정보 조회

### Seminars
- `GET /api/seminars` – 세미나 목록 조회  
- `GET /api/seminars/{id}` – 세미나 상세 보기  
- `POST /api/seminars` – 세미나 등록 (관리자)  
- `PUT /api/seminars/{id}` – 세미나 수정 (관리자)  
- `DELETE /api/seminars/{id}` – 세미나 삭제 (관리자)  
- ✅ 세미나는 시작 시간이 지나면 자동 마감 처리됨 (`is_closed = true`)  
- ✅ 마감된 세미나는 신청 불가  

### Applications
- `POST /api/applications` – 세미나 신청  
- `GET /api/applications/my` – 내 신청 내역  
- `GET /api/seminars/{id}/applicants` – 세미나별 신청자 목록 (관리자)  
- `DELETE /api/applications/{id}/cancel` – 세미나 신청 취소  
  - ✅ 세미나 시작 24시간 전까지만 취소 가능  
  - ✅ 마감된 세미나 또는 지난 세미나는 취소 불가  

### Attachments
- `POST /api/seminars/{id}/attachments` – 파일 업로드 (관리자)  
- `GET /api/attachments/{id}/download` – 파일 다운로드


---

## 🧪 Testing & Documentation
- JUnit 5 기반 테스트
- Swagger(OpenAPI 3) 문서 자동화 (springdoc-openapi 2.x)
- 오프라인에서도 확인 가능한 문서 포함

---

## 🚫 외부 의존 금지
- 외부 인터넷으로 직접 API 호출, CDN, 외부 파일 스토리지 사용 금지
- 외부 이미지, 외부 CDN 자원 사용 금지
- 내부 Nexus Repository 등 사내 사설 저장소를 통한 Maven, npm 패키지 설치만 허용(향후)
- 외부 클라우드(예: AWS, GCP, Firebase 등) 사용 금지








